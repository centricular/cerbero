From 11dc34b97ae209604cb1c16b4c5b7914c3a781d9 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Mon, 12 Nov 2018 17:22:38 +0530
Subject: [PATCH] Add meson build files

Taken from wrapdb, with some edits.

https://wrapdb.mesonbuild.com/libxml2 2.9.7 revision 4
---
 config.h.meson             | 333 +++++++++++++++++++++++++++++++++++++
 include/libxml/meson.build |  54 ++++++
 meson.build                | 319 +++++++++++++++++++++++++++++++++++
 3 files changed, 706 insertions(+)
 create mode 100644 config.h.meson
 create mode 100644 include/libxml/meson.build
 create mode 100644 meson.build

diff --git a/config.h.meson b/config.h.meson
new file mode 100644
index 0000000..237e13c
--- /dev/null
+++ b/config.h.meson
@@ -0,0 +1,333 @@
+/* config.h.meson.  Generated from configure.ac by autoheader
+   and adapted for use in Meson. */
+
+/* Type cast for the gethostbyname() argument */
+#mesondefine GETHOSTBYNAME_ARG_CAST
+
+/* Define to 1 if you have the <ansidecl.h> header file. */
+#mesondefine HAVE_ANSIDECL_H
+
+/* Define to 1 if you have the <arpa/inet.h> header file. */
+#mesondefine HAVE_ARPA_INET_H
+
+/* Define to 1 if you have the <arpa/nameser.h> header file. */
+#mesondefine HAVE_ARPA_NAMESER_H
+
+/* Whether struct sockaddr::__ss_family exists */
+#mesondefine HAVE_BROKEN_SS_FAMILY
+
+/* Define to 1 if you have the `class' function. */
+#mesondefine HAVE_CLASS
+
+/* Define to 1 if you have the <ctype.h> header file. */
+#mesondefine HAVE_CTYPE_H
+
+/* Define to 1 if you have the <dirent.h> header file. */
+#mesondefine HAVE_DIRENT_H
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#mesondefine HAVE_DLFCN_H
+
+/* Have dlopen based dso */
+#mesondefine HAVE_DLOPEN
+
+/* Define to 1 if you have the <dl.h> header file. */
+#mesondefine HAVE_DL_H
+
+/* Define to 1 if you have the <errno.h> header file. */
+#mesondefine HAVE_ERRNO_H
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#mesondefine HAVE_FCNTL_H
+
+/* Define to 1 if you have the `finite' function. */
+#mesondefine HAVE_FINITE
+
+/* Define to 1 if you have the <float.h> header file. */
+#mesondefine HAVE_FLOAT_H
+
+/* Define to 1 if you have the `fpclass' function. */
+#mesondefine HAVE_FPCLASS
+
+/* Define to 1 if you have the `fprintf' function. */
+#mesondefine HAVE_FPRINTF
+
+/* Define to 1 if you have the `fp_class' function. */
+#mesondefine HAVE_FP_CLASS
+
+/* Define to 1 if you have the <fp_class.h> header file. */
+#mesondefine HAVE_FP_CLASS_H
+
+/* Define to 1 if you have the `ftime' function. */
+#mesondefine HAVE_FTIME
+
+/* Define if getaddrinfo is there */
+#mesondefine HAVE_GETADDRINFO
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#mesondefine HAVE_GETTIMEOFDAY
+
+/* Define to 1 if you have the <ieeefp.h> header file. */
+#mesondefine HAVE_IEEEFP_H
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#mesondefine HAVE_INTTYPES_H
+
+/* Define to 1 if you have the `isascii' function. */
+#mesondefine HAVE_ISASCII
+
+/* Define if isinf is there */
+#mesondefine HAVE_ISINF
+
+/* Define if isnan is there */
+#mesondefine HAVE_ISNAN
+
+/* Define to 1 if you have the `isnand' function. */
+#mesondefine HAVE_ISNAND
+
+/* Define if history library is there (-lhistory) */
+#mesondefine HAVE_LIBHISTORY
+
+/* Have compression library */
+#mesondefine HAVE_LIBLZMA
+
+/* Define if pthread library is there (-lpthread) */
+#mesondefine HAVE_LIBPTHREAD
+
+/* Define if readline library is there (-lreadline) */
+#mesondefine HAVE_LIBREADLINE
+
+/* Have compression library */
+#mesondefine HAVE_LIBZ
+
+/* Define to 1 if you have the <limits.h> header file. */
+#mesondefine HAVE_LIMITS_H
+
+/* Define to 1 if you have the `localtime' function. */
+#mesondefine HAVE_LOCALTIME
+
+/* Define to 1 if you have the <lzma.h> header file. */
+#mesondefine HAVE_LZMA_H
+
+/* Define to 1 if you have the <malloc.h> header file. */
+#mesondefine HAVE_MALLOC_H
+
+/* Define to 1 if you have the <math.h> header file. */
+#mesondefine HAVE_MATH_H
+
+/* Define to 1 if you have the <memory.h> header file. */
+#mesondefine HAVE_MEMORY_H
+
+/* Define to 1 if you have the `mmap' function. */
+#mesondefine HAVE_MMAP
+
+/* Define to 1 if you have the `munmap' function. */
+#mesondefine HAVE_MUNMAP
+
+/* mmap() is no good without munmap() */
+#if defined(HAVE_MMAP) && !defined(HAVE_MUNMAP)
+#  undef /**/ HAVE_MMAP
+#endif
+
+/* Define to 1 if you have the <nan.h> header file. */
+#mesondefine HAVE_NAN_H
+
+/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
+#mesondefine HAVE_NDIR_H
+
+/* Define to 1 if you have the <netdb.h> header file. */
+#mesondefine HAVE_NETDB_H
+
+/* Define to 1 if you have the <netinet/in.h> header file. */
+#mesondefine HAVE_NETINET_IN_H
+
+/* Define to 1 if you have the <poll.h> header file. */
+#mesondefine HAVE_POLL_H
+
+/* Define to 1 if you have the `printf' function. */
+#mesondefine HAVE_PRINTF
+
+/* Define if <pthread.h> is there */
+#mesondefine HAVE_PTHREAD_H
+
+/* Define to 1 if you have the `putenv' function. */
+#mesondefine HAVE_PUTENV
+
+/* Define to 1 if you have the `rand' function. */
+#mesondefine HAVE_RAND
+
+/* Define to 1 if you have the `rand_r' function. */
+#mesondefine HAVE_RAND_R
+
+/* Define to 1 if you have the <resolv.h> header file. */
+#mesondefine HAVE_RESOLV_H
+
+/* Have shl_load based dso */
+#mesondefine HAVE_SHLLOAD
+
+/* Define to 1 if you have the `signal' function. */
+#mesondefine HAVE_SIGNAL
+
+/* Define to 1 if you have the <signal.h> header file. */
+#mesondefine HAVE_SIGNAL_H
+
+/* Define to 1 if you have the `snprintf' function. */
+#mesondefine HAVE_SNPRINTF
+
+/* Define to 1 if you have the `sprintf' function. */
+#mesondefine HAVE_SPRINTF
+
+/* Define to 1 if you have the `srand' function. */
+#mesondefine HAVE_SRAND
+
+/* Define to 1 if you have the `sscanf' function. */
+#mesondefine HAVE_SSCANF
+
+/* Define to 1 if you have the `stat' function. */
+#mesondefine HAVE_STAT
+
+/* Define to 1 if you have the <stdarg.h> header file. */
+#mesondefine HAVE_STDARG_H
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#mesondefine HAVE_STDINT_H
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#mesondefine HAVE_STDLIB_H
+
+/* Define to 1 if you have the `strdup' function. */
+#mesondefine HAVE_STRDUP
+
+/* Define to 1 if you have the `strerror' function. */
+#mesondefine HAVE_STRERROR
+
+/* Define to 1 if you have the `strftime' function. */
+#mesondefine HAVE_STRFTIME
+
+/* Define to 1 if you have the <strings.h> header file. */
+#mesondefine HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#mesondefine HAVE_STRING_H
+
+/* Define to 1 if you have the `strndup' function. */
+#mesondefine HAVE_STRNDUP
+
+/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
+   */
+#mesondefine HAVE_SYS_DIR_H
+
+/* Define to 1 if you have the <sys/mman.h> header file. */
+#mesondefine HAVE_SYS_MMAN_H
+
+/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
+   */
+#mesondefine HAVE_SYS_NDIR_H
+
+/* Define to 1 if you have the <sys/select.h> header file. */
+#mesondefine HAVE_SYS_SELECT_H
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#mesondefine HAVE_SYS_SOCKET_H
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#mesondefine HAVE_SYS_STAT_H
+
+/* Define to 1 if you have the <sys/timeb.h> header file. */
+#mesondefine HAVE_SYS_TIMEB_H
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#mesondefine HAVE_SYS_TIME_H
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#mesondefine HAVE_SYS_TYPES_H
+
+/* Define to 1 if you have the `time' function. */
+#mesondefine HAVE_TIME
+
+/* Define to 1 if you have the <time.h> header file. */
+#mesondefine HAVE_TIME_H
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#mesondefine HAVE_UNISTD_H
+
+/* Whether va_copy() is available */
+#mesondefine HAVE_VA_COPY
+
+/* Define to 1 if you have the `vfprintf' function. */
+#mesondefine HAVE_VFPRINTF
+
+/* Define to 1 if you have the `vsnprintf' function. */
+#mesondefine HAVE_VSNPRINTF
+
+/* Define to 1 if you have the `vsprintf' function. */
+#mesondefine HAVE_VSPRINTF
+
+/* Define to 1 if you have the <zlib.h> header file. */
+#mesondefine HAVE_ZLIB_H
+
+/* Define to 1 if you have the `_stat' function. */
+#mesondefine HAVE__STAT
+
+/* Whether __va_copy() is available */
+#mesondefine HAVE___VA_COPY
+
+/* Define as const if the declaration of iconv() needs const. */
+#mesondefine ICONV_CONST
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries. */
+#mesondefine LT_OBJDIR
+
+/* Name of package */
+#mesondefine PACKAGE
+
+/* Define to the address where bug reports for this package should be sent. */
+#mesondefine PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#mesondefine PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#mesondefine PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#mesondefine PACKAGE_TARNAME
+
+/* Define to the home page for this package. */
+#mesondefine PACKAGE_URL
+
+/* Define to the version of this package. */
+#mesondefine PACKAGE_VERSION
+
+/* Type cast for the send() function 2nd arg */
+#mesondefine SEND_ARG2_CAST
+
+/* Define to 1 if you have the ANSI C header files. */
+#mesondefine STDC_HEADERS
+
+/* Support for IPv6 */
+#mesondefine SUPPORT_IP6
+
+/* Define if va_list is an array type */
+#mesondefine VA_LIST_IS_ARRAY
+
+/* Version number of package */
+#mesondefine VERSION
+
+/* Determine what socket length (socklen_t) data type is */
+#mesondefine XML_SOCKLEN_T
+
+/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
+   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
+   #define below would cause a syntax error. */
+#mesondefine _UINT32_T
+
+/* Using the Win32 Socket implementation */
+#mesondefine _WINSOCKAPI_
+
+/* ss_family is not defined here, use __ss_family instead */
+#mesondefine ss_family
+
+/* Define to the type of an unsigned integer type of width exactly 32 bits if
+   such a type exists and the standard includes do not define it. */
+#mesondefine uint32_t
diff --git a/include/libxml/meson.build b/include/libxml/meson.build
new file mode 100644
index 0000000..6d86d48
--- /dev/null
+++ b/include/libxml/meson.build
@@ -0,0 +1,54 @@
+configure_file(input : 'xmlversion.h.in',
+               output: 'xmlversion.h',
+               configuration: withcdata,
+               install_dir : join_paths(get_option('includedir'), 'libxml2', 'libxml'))
+
+libxml_headers = files(
+  'c14n.h',
+  'catalog.h',
+  'chvalid.h',
+  'debugXML.h',
+  'dict.h',
+  'DOCBparser.h',
+  'encoding.h',
+  'entities.h',
+  'globals.h',
+  'hash.h',
+  'HTMLparser.h',
+  'HTMLtree.h',
+  'list.h',
+  'nanoftp.h',
+  'nanohttp.h',
+  'parser.h',
+  'parserInternals.h',
+  'pattern.h',
+  'relaxng.h',
+  'SAX.h',
+  'SAX2.h',
+  'schemasInternals.h',
+  'schematron.h',
+  'threads.h',
+  'tree.h',
+  'uri.h',
+  'valid.h',
+  'xinclude.h',
+  'xlink.h',
+  'xmlautomata.h',
+  'xmlerror.h',
+  'xmlexports.h',
+  'xmlIO.h',
+  'xmlmemory.h',
+  'xmlmodule.h',
+  'xmlreader.h',
+  'xmlregexp.h',
+  'xmlsave.h',
+  'xmlschemas.h',
+  'xmlschemastypes.h',
+  'xmlstring.h',
+  'xmlunicode.h',
+  'xmlwriter.h',
+  'xpath.h',
+  'xpathInternals.h',
+  'xpointer.h',
+)
+install_headers(libxml_headers, subdir : 'libxml2/libxml')
diff --git a/meson.build b/meson.build
new file mode 100644
index 0000000..d69e4dc
--- /dev/null
+++ b/meson.build
@@ -0,0 +1,319 @@
+project('libxml2', 'c', version : '2.9.7', license : 'mit')
+
+cdata = configuration_data()
+
+cdata.set('PACKAGE', meson.project_name())
+cdata.set('VERSION', meson.project_version())
+cdata.set('PACKAGE_NAME', meson.project_name())
+cdata.set('PACKAGE_STRING', '@0@ @1@'.format(meson.project_name(), meson.project_version()))
+
+cc = meson.get_compiler('c')
+
+have_ipv6 = cc.compiles('''#include <sys/types.h>
+#include <sys/socket.h>
+
+void func() {
+     struct sockaddr_storage ss;
+     socket(AF_INET6, SOCK_STREAM, 0);
+}''', name : 'Supports IPv6')
+cdata.set('SUPPORT_IP6', have_ipv6)
+
+cdata.set('XML_SOCKLEN_T', 'socklen_t')
+
+checked_headers = [
+  ['ansidecl.h', 'HAVE_ANSIDECL_H'],
+  ['arpa/inet.h', 'HAVE_ARPA_INET_H'],
+  ['arpa/nameser.h', 'HAVE_ARPA_NAMESER_H'],
+  ['ctype.h', 'HAVE_CTYPE_H'],
+  ['dirent.h', 'HAVE_DIRENT_H'],
+  ['dl.h', 'HAVE_DL_H'],
+  ['dlfcn.h', 'HAVE_DLFCN_H'],
+  ['errno.h', 'HAVE_ERRNO_H'],
+  ['fcntl.h', 'HAVE_FCNTL_H'],
+  ['float.h', 'HAVE_FLOAT_H'],
+  ['ieeefp.h', 'HAVE_IEEEFP_H'],
+  ['ieeefp.h', 'HAVE_IEEEFP_H'],
+  ['inttypes.h', 'HAVE_INTTYPES_H'],
+  ['ip_class.h', 'HAVE_FP_CLASS_H'],
+  ['limits.h', 'HAVE_LIMITS_H'],
+  ['lzma.h', 'HAVE_LZMA_H'],
+  ['malloc.h', 'HAVE_MALLOC_H'],
+  ['math.h', 'HAVE_MATH_H'],
+  ['memory.h', 'HAVE_MEMORY_H'],
+  ['nan.h', 'HAVE_NAN_H'],
+  ['ndir.h', 'HAVE_NDIR_H'],
+  ['netdb.h', 'HAVE_NETDB_H'],
+  ['netinet/in.h', 'HAVE_NETINET_IN_H'],
+  ['poll.h', 'HAVE_POLL_H'],
+  ['pthread.h', 'HAVE_PTHREAD_H'],
+  ['resolv.h', 'HAVE_RESOLV_H'],
+  ['signal.h', 'HAVE_SIGNAL_H'],
+  ['stdarg.h', 'HAVE_STDARG_H'],
+  ['stdint.h', 'HAVE_STDINT_H'],
+  ['stdlib.h', 'HAVE_STDLIB_H'],
+  ['string.h', 'HAVE_STRING_H'],
+  ['strings.h', 'HAVE_STRINGS_H'],
+  ['sys/dir.h', 'HAVE_SYS_DIR_H'],
+  ['sys/mman.h', 'HAVE_SYS_MMAN_H'],
+  ['sys/ndir.h', 'HAVE_SYS_NDIR_H'],
+  ['sys/select.h', 'HAVE_SYS_SELECT_H'],
+  ['sys/socket.h', 'HAVE_SYS_SOCKET_H'],
+  ['sys/stat.h', 'HAVE_SYS_STAT_H'],
+  ['sys/time.h', 'HAVE_SYS_TIME_H'],
+  ['sys/timeb.h', 'HAVE_SYS_TIMEB_H'],
+  ['sys/types.h', 'HAVE_SYS_TYPES_H'],
+  ['time.h', 'HAVE_TIME_H'],
+  ['unistd.h', 'HAVE_UNISTD_H'],
+  ['zlib.h', 'HAVE_ZLIB_H'],
+]
+
+foreach h : checked_headers
+  if cc.has_header(h.get(0))
+    cdata.set(h.get(1), 1)
+  endif
+endforeach
+
+cdata.set('ICONV_CONST', '')
+cdata.set('SEND_ARG2_CAST', '')
+cdata.set('GETHOSTBYNAME_ARG_CAST', '')
+
+checked_funcs = [
+  ['finite', 'HAVE_FINITE'],
+  ['strdup', 'HAVE_STRDUP'],
+  ['strndup', 'HAVE_STRNDUP'],
+  ['strerror', 'HAVE_STRERROR'],
+  ['finite', 'HAVE_FINITE'],
+  ['isnand', 'HAVE_ISNAND'],
+  ['fp_class', 'HAVE_FP_CLASS'],
+  ['class', 'HAVE_CLASS'],
+  ['fpclass', 'HAVE_FPCLASS'],
+  ['strftime', 'HAVE_STRFTIME'],
+  ['localtime', 'HAVE_LOCALTIME'],
+  ['gettimeofday', 'HAVE_GETTIMEOFDAY'],
+  ['ftime', 'HAVE_FTIME'],
+  ['stat', 'HAVE_STAT'],
+  ['_stat', 'HAVE__STAT'],
+  ['signal', 'HAVE_SIGNAL'],
+  ['rand', 'HAVE_RAND'],
+  ['rand_r', 'HAVE_RAND_R'],
+  ['srand', 'HAVE_SRAND'],
+  ['time', 'HAVE_TIME'],
+  ['isascii', 'HAVE_ISASCII'],
+  ['mmap', 'HAVE_MMAP'],
+  ['munmap', 'HAVE_MUNMAP'],
+  ['putenv', 'HAVE_PUTENV'],
+  ['printf', 'HAVE_PRINTF'],
+  ['sprintf', 'HAVE_SPRINTF'],
+  ['fprintf', 'HAVE_FPRINTF'],
+  ['snprintf', 'HAVE_SNPRINTF'],
+  ['vfprintf', 'HAVE_VFPRINTF'],
+  ['vsprintf', 'HAVE_VSPRINTF'],
+  ['vsnprintf', 'HAVE_VSNPRINTF'],
+  ['sscanf', 'HAVE_SSCANF'],
+  ['getaddrinfo', 'HAVE_GETADDRINFO'],
+  ['va_copy', 'HAVE_VA_COPY'],
+  ['__va_copy', 'HAVE___VA_COPY'],
+]
+foreach f : checked_funcs
+  if (cc.has_function(f.get(0)))
+    cdata.set(f.get(1), 1)
+  endif
+endforeach
+
+dl_lib = cc.find_library('dl', required: false)
+if (dl_lib.found() and cc.has_function('dlopen', args: '-ldl'))
+  cdata.set('HAVE_DLOPEN', 1)
+endif
+
+math_lib = cc.find_library('m', required: false)
+
+iconv_lib = cc.find_library('iconv', required : false)
+
+lzma_dep = dependency('liblzma', required: false)
+if (lzma_dep.found())
+  cdata.set('HAVE_LIBLZMA', 1)
+endif
+
+thread_dep = dependency('threads', required: false)
+if (thread_dep.found())
+   c_args = ['-D_REENTRANT']
+endif
+
+zlib_dep = dependency('zlib', required: false)
+if not zlib_dep.found()
+  zlib_dep = cc.find_library('z', required: false)
+endif
+if zlib_dep.found()
+  cdata.set('HAVE_LIBZ', 1)
+endif
+
+readline_lib = cc.find_library('readline', required: false)
+if readline_lib.found()
+  cdata.set('HAVE_LIBREADLINE', 1)
+endif
+
+history_lib = cc.find_library('history', required: false)
+if history_lib.found()
+  cdata.set('HAVE_LIBHISTORY', 1)
+endif
+
+deps = [math_lib, iconv_lib, dl_lib, lzma_dep, thread_dep, zlib_dep, readline_lib, history_lib]
+
+if target_machine.system() == 'windows'
+  deps += cc.find_library('ws2_32')
+endif
+
+configure_file(input : 'config.h.meson',
+  output : 'config.h',
+  configuration : cdata)
+
+withcdata = configuration_data()
+withcdata.set10('HAVE_LIBLZMA', lzma_dep.found())
+version = meson.project_version()
+version_array = version.split('.')
+major = version_array[0].to_int()
+minor = version_array[1].to_int()
+micro = version_array[2].to_int()
+version_number = major * 10000 + minor * 100 + micro
+withcdata.set('VERSION', version)
+withcdata.set('LIBXML_VERSION_NUMBER', version_number)
+withcdata.set('LIBXML_VERSION_STRING', '@0@'.format(version_number))
+withcdata.set('LIBXML_VERSION_EXTRA', '')
+
+need_trio = false
+pprefix = '#include <stdio.h>'
+if (not cc.has_function('printf', prefix: pprefix) or
+    not cc.has_function('sprintf', prefix: pprefix) or
+    not cc.has_function('fprintf', prefix: pprefix) or
+    not cc.has_function('snprintf', prefix: pprefix) or
+    not cc.has_function('vfprintf', prefix: pprefix) or
+    not cc.has_function('vsprintf', prefix: pprefix) or
+    not cc.has_function('vsnprintf', prefix: pprefix) or
+    not cc.has_function('sscanf', prefix: pprefix))
+    need_trio = true
+endif
+withcdata.set10('WITH_TRIO', need_trio)
+
+withcdata.set10('WITH_THREADS', thread_dep.found())
+withcdata.set10('WITH_THREAD_ALLOC', false)
+withcdata.set10('WITH_TREE', true)
+withcdata.set10('WITH_OUTPUT', true)
+withcdata.set10('WITH_PUSH', true)
+withcdata.set10('WITH_READER', true)
+withcdata.set10('WITH_PATTERN', true)
+withcdata.set10('WITH_WRITER', true)
+withcdata.set10('WITH_SAX1', true)
+withcdata.set10('WITH_FTP', true)
+withcdata.set10('WITH_HTTP', true)
+withcdata.set10('WITH_VALID', true)
+withcdata.set10('WITH_HTML', true)
+withcdata.set10('WITH_LEGACY', true)
+withcdata.set10('WITH_C14N', true)
+withcdata.set10('WITH_CATALOG', true)
+withcdata.set10('WITH_DOCB', true)
+withcdata.set10('WITH_XPATH', true)
+withcdata.set10('WITH_XPTR', true)
+withcdata.set10('WITH_XINCLUDE', true)
+withcdata.set10('WITH_ICONV', iconv_lib.found())
+withcdata.set10('WITH_ICU', false)
+withcdata.set10('WITH_ISO8859X', true)
+withcdata.set10('WITH_DEBUG', true)
+withcdata.set10('WITH_MEM_DEBUG', false)
+withcdata.set10('WITH_RUN_DEBUG', false)
+withcdata.set10('WITH_REGEXPS', true)
+withcdata.set10('WITH_SCHEMAS', true)
+withcdata.set10('WITH_SCHEMATRON', true)
+withcdata.set10('WITH_MODULES', dl_lib.found())
+
+system = target_machine.system()
+module_ext = '.so'
+if (system == 'windows' or system == 'cygwin')
+  module_ext = '.dll'
+endif
+withcdata.set('MODULE_EXTENSION', module_ext)
+
+withcdata.set10('WITH_ZLIB', zlib_dep.found())
+withcdata.set10('WITH_LZMA', lzma_dep.found())
+
+
+subdir('include/libxml')
+
+trio_sources = [ 'triostr.c', 'trio.c', 'trionan.c' ]
+sources = [
+  'SAX.c',
+  'entities.c',
+  'encoding.c',
+  'error.c',
+  'parserInternals.c',
+  'parser.c',
+  'tree.c',
+  'hash.c',
+  'list.c',
+  'xmlIO.c',
+  'xmlmemory.c',
+  'uri.c',
+  'valid.c',
+  'xlink.c',
+  'HTMLparser.c',
+  'HTMLtree.c',
+  'debugXML.c',
+  'xpath.c',
+  'xpointer.c',
+  'xinclude.c',
+  'nanohttp.c',
+  'nanoftp.c',
+  'catalog.c',
+  'globals.c',
+  'threads.c',
+  'c14n.c',
+  'xmlstring.c',
+  'buf.c',
+  'xmlregexp.c',
+  'xmlschemas.c',
+  'xmlschemastypes.c',
+  'xmlunicode.c',
+  'xmlreader.c',
+  'relaxng.c',
+  'dict.c',
+  'SAX2.c',
+  'xmlwriter.c',
+  'legacy.c',
+  'chvalid.c',
+  'pattern.c',
+  'xmlsave.c',
+  'xmlmodule.c',
+  'schematron.c',
+  'xzlib.c'
+]
+
+if (need_trio)
+  sources += trio_sources
+endif
+
+incdir = include_directories('include')
+
+xml2lib = library('xml2', sources,
+		  c_args : c_args,
+		  include_directories : incdir,
+		  dependencies: deps,
+                  install: true)
+xml2lib_dep = declare_dependency(link_with: xml2lib,
+				 include_directories: incdir,
+				 dependencies: deps)
+pkg = import('pkgconfig')
+pkg.generate(name : 'libXML',
+             description: 'libXML library version2.',
+             filebase: 'libxml-2.0',
+             libraries: xml2lib,
+             subdirs: 'libxml2',
+             variables: 'modules=@0@'.format(withcdata.get('WITH_MODULES')))
+
+
+executable('xmllint', 'xmllint.c',
+           dependencies: xml2lib_dep,
+           install: true)
+
+dictexe = executable('testdict', 'testdict.c',
+		     dependencies : xml2lib_dep)
+
+test('dict', dictexe)
-- 
2.18.0.windows.1

