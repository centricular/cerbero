# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

class Recipe(recipe.Recipe):
    name = 'glib-tools'
    version = '2.56.1'
    stype = SourceType.TARBALL
    maj_ver = '.'.join(version.split('.')[0:2])
    url = 'https://download.gnome.org/sources/glib/{}/glib-%(version)s.tar.xz'.format(maj_ver)
    tarball_dirname = 'glib-%(version)s'
    licenses = [License.LGPLv2Plus]
    btype = BuildType.MESON
    meson_options = {'gtk_doc': 'false', 'internal_pcre': 'true', 'libmount': 'false',
                     'dtrace': 'false', 'iconv': 'libc'}
    deps = ['libffi', 'zlib']
    patches = ["../glib/0003-Add-support-for-loading-GIO-modules-from-the-distro-.patch",
               "../glib/0004-Allow-for-a-second-distro-GIO-module-path-as-used-on.patch",
               "../glib/0005-Blacklist-the-bamf-GIO-module.patch",
               "../glib/0006-giomodule-do-not-try-to-load-modules-from-gio-module.patch",
               "../glib/0008-Unhide-_g_io_modules_ensure_extension_points_registe.patch",
               '../glib/0009-Implementation-of-Cocoa-event-loop-integration-in-GM.patch',
               '../glib/0013-gmain-Fix-erroneous-if-condition-when-dtrace-is-disa.patch',
               '../glib/glib-2.57-meson-backported-fixes.patch',
               '../glib/0001-DO-NOT-UPSTREAM-Prototypes-missing-in-Cerbero-s-anci.patch',
               '../glib/0001-gengiotypefuncs.py-Read-and-parse-files-in-binary-mo.patch',
              ]

    def prepare(self):
        if self.config.target_platform != Platform.LINUX:
            # Disable valgrind code on non-Linux, in the best case it just
            # gives us compiler errors :)
            self.append_env('CFLAGS', '-DNVALGRIND=1')
            self.meson_options.update({'xattr': 'false'})
        # macOS provides libiconv as a separate library
        if self.config.target_platform == Platform.DARWIN:
            self.meson_options.update({'iconv': 'native'})
        # linux and BSD provide iconv as a part of libc
        elif self.config.target_platform == Platform.LINUX:
            self.meson_options.update({'iconv': 'libc'})
        # Other platforms don't provide libiconv, so we build it
        else:
            self.meson_options.update({'iconv': 'gnu'})
        if self.config.target_platform == Platform.WINDOWS:
            # Want secure versions of stdlib functions. Glib already defines
            # _WIN32_WINNT, so undefine it on the cmdline to avoid warnings
            self.append_env('CFLAGS', '-DMINGW_HAS_SECURE_API=1', '-U_WIN32_WINNT')
