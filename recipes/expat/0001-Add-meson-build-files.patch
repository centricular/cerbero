From f3ad431de06cb996bd377e7f76337c2846287189 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Mon, 12 Nov 2018 12:23:13 +0530
Subject: [PATCH] Add meson build files

Taken from the meson wrapdb and edited.

https://wrapdb.mesonbuild.com/v1/projects/expat/2.2.5/4/get_wrap
---
 LICENSE.build     |  19 ++++++
 meson.build       | 165 ++++++++++++++++++++++++++++++++++++++++++++++
 meson_options.txt |  45 +++++++++++++
 3 files changed, 229 insertions(+)
 create mode 100644 LICENSE.build
 create mode 100644 meson.build
 create mode 100644 meson_options.txt

diff --git a/LICENSE.build b/LICENSE.build
new file mode 100644
index 0000000..ec28804
--- /dev/null
+++ b/LICENSE.build
@@ -0,0 +1,19 @@
+Copyright (c) 2018 The Meson development team
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/meson.build b/meson.build
new file mode 100644
index 0000000..d191f48
--- /dev/null
+++ b/meson.build
@@ -0,0 +1,165 @@
+# Copyright © 2018 Dylan Baker
+
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+# SOFTWARE.
+
+project(
+  'expat',
+  'c',
+  license : 'MIT',
+  version : '2.2.5',
+  meson_version : '>= 0.44.0',
+)
+
+config = configuration_data()
+cc = meson.get_compiler('c')
+
+# Define how much context to retain around the current parse point.
+config.set('XML_CONTEXT_BYTES', 1024)
+
+if get_option('use_libbsd')
+  dep_libbsd = dependency('libbsd')
+  config.set('HAVE_LIBBSD', true)
+else
+  dep_libbsd = []
+endif
+
+if cc.has_function('arc4random_buf')
+  config.set('HAVE_ARC4RANDOM_BUF', true)
+elif cc.has_function('arc4random')
+  config.set('HAVE_ARC4RANDOM', true)
+endif
+
+if get_option('xml_dtd')
+  config.set('XML_DTD', true)
+endif
+if get_option('xml_ns')
+  config.set('XML_NS', true)
+endif
+
+foreach h : ['dlfcn', 'fcntl', 'inttypes', 'memory', 'stdint', 'stdlib',
+             'strings', 'string', 'sys/stat', 'sys/types', 'unistd']
+  if cc.has_header(h + '.h')
+    config.set('HAVE_@0@_H'.format(h.underscorify().to_upper()), true)
+  endif
+endforeach
+
+foreach f : ['getpagesize', 'memmove', 'bcopy', 'mmap', 'getrandom']
+  if cc.has_function(f)
+    config.set('HAVE_@0@'.format(f.to_upper()), true)
+  endif
+endforeach
+
+if host_machine.endian() == 'little'
+  config.set('BYTEORDER', 1234)
+else
+  config.set('BYTEORDER', 4321)
+endif
+
+
+if not (config.get('HAVE_SYS_TYPES_H', false) and
+        cc.has_header_symbol('sys/types.h', 'off_t'))
+  config.set('off_t', 'long')
+endif
+if not (config.get('HAVE_SYS_TYPES_H', false) and
+        cc.has_header_symbol('sys/types.h', 'size_t'))
+  config.set('size_t', 'unsigned')
+endif
+
+if cc.compiles('''
+      #include <stdlib.h>       /* for NULL */
+      #include <unistd.h>       /* for syscall */
+      #include <sys/syscall.h>  /* for SYS_getrandom */
+      int main() {
+        syscall(SYS_getrandom, NULL, 0, 0);
+        return 0;
+      }''',
+      name : 'SYS_getrandom',
+    )
+  config.set('HAVE_SYSCALL_GETRANDOM', true)
+endif
+
+# Install headers
+config_h = configure_file(
+  configuration : config,
+  output : 'expat_config.h',
+  install_dir : get_option('includedir'),
+  install : true,
+)
+install_headers('lib/expat.h', 'lib/expat_external.h')
+
+# pkg-config file
+pkgdata = configuration_data()
+pkgdata.set('prefix', get_option('prefix'))
+pkgdata.set('exec_prefix', get_option('prefix'))
+pkgdata.set('libdir', '${prefix}/' + get_option('libdir'))
+pkgdata.set('includedir', '${prefix}/' + get_option('includedir'))
+pkgdata.set('PACKAGE_VERSION', meson.project_version())
+
+configure_file(
+  input : 'expat.pc.in',
+  output : 'expat.pc',
+  configuration : pkgdata,
+  install_dir : join_paths(get_option('libdir'), 'pkgconfig'),
+  install: true
+)
+
+add_project_arguments('-DHAVE_EXPAT_CONFIG_H', language : ['c'])
+if cc.has_argument('-fno-strict-aliasing')
+  add_project_arguments('-fno-strict-aliasing', language : ['c'])
+endif
+if cc.get_id() == 'msvc'
+  add_project_arguments('-D_CRT_SECURE_NO_WARNINGS', '-wd4996', language : ['c'])
+  if get_option('default_library') == 'static'
+    add_project_arguments('-DXML_STATIC', language : ['c'])
+  endif
+endif
+if not ['windows', 'cygwin'].contains(host_machine.system())
+  if get_option('use_dev_urandom')
+    add_project_arguments('-DXML_DEV_URANDOM', language : ['c'])
+  endif
+endif
+
+_files = [
+  files(
+    'lib/loadlibrary.c', 'lib/xmlparse.c', 'lib/xmlrole.c', 'lib/xmltok.c',
+    'lib/xmltok_impl.c', 'lib/xmltok_ns.c',
+  ),
+  config_h,
+]
+
+libexpat = library(
+  'expat',
+  _files,
+  vs_module_defs : 'lib/libexpat.def',
+  include_directories : include_directories('lib'),
+  dependencies : dep_libbsd,
+  version : '1.6.7',
+  soversion : host_machine.system() != 'windows' ? '1' : '',
+  install : true,
+)
+
+expat_dep = declare_dependency(
+  sources : config_h,
+  link_with : libexpat,
+  include_directories : include_directories('lib'),
+)
+
+# TODO: tools, examples, tests, docs
+# These are probably not necessary for a wrap, but someone might have use for
+# them
diff --git a/meson_options.txt b/meson_options.txt
new file mode 100644
index 0000000..0c5bedf
--- /dev/null
+++ b/meson_options.txt
@@ -0,0 +1,45 @@
+# Copyright © 2018 Dylan Baker
+
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+# SOFTWARE.
+
+option(
+  'use_libbsd',
+  type : 'boolean',
+  value : false,
+  description : 'Use libbsd for arc4random_buf',
+)
+option(
+  'xml_dtd',
+  type : 'boolean',
+  value : true,
+  description : 'If true make parameter entity parsing functionality available',
+)
+option(
+  'xml_ns',
+  type : 'boolean',
+  value : true,
+  description : 'If true make XML Namespaces functionality available',
+)
+option(
+  'use_dev_urandom',
+  type : 'boolean',
+  value : true,
+  description : 'If true use /dev/urandom for entropy. Has no affect on platforms without /dev/urandom',
+)
+# TODO: tools, examples, tests, docs
-- 
2.18.0.windows.1

